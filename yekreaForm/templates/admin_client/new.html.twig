{% extends 'base.html.twig' %}

{% block title %}{{parent()}} Nouveau Client{% endblock %}

    
{% block body %}
    
    <div class="containerPages">

        <div class="pages">
        
            <h1 class="title">Nouveau client</h1>

            {# 
                CLASS BOOTSTRAP 

                progress-bar-striped  = trait sur la barre de progression
                progress-bar-animated = animation de la barre de progression

            #}

            {# Barre de progression 2eme Ã©tape #}

            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width:33%; background-color:#E5191E !important;" aria-valuenow="33" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        
            <div class="containerForm">
                
                <div class="formulaire">
                    {# <a class="btn btn-primary" href="{{ path('app_admin_client_index') }}">Retour</a> #}

                    {{ include('admin_client/_form.html.twig') }}
                </div>
                

            </div>
        </div>
    </div>
    

    
{% endblock %}
{% block javascripts %}
    <script>
        let allReseau 
        let allTag
        let clientReseauArray
    //1 recuperer tout les reseau

        // Cette evenement s'active quand l'element(ici le body) s'active, par un click ou l'appuie d'une touche.
        //Son role est de recharger la liste d'element contenu dans Service_details pour que mes nouveau elements soient pris en compte
        // document.body.addEventListener('DOMActivate', () => {})

        document.querySelectorAll('.choice>input').forEach(radio => {
            radio.addEventListener('change', e => {
                allReseau = []
                let reseau 
                document.querySelectorAll('.choice>input').forEach(element => {
                    
                    if(element.checked ){

                        reseau = element.value
                        allReseau.push(reseau)
                    }
                    
                    
                })
            console.log(allReseau)
        clientReseauArray = []
        for (let index = 0; index < allReseau.length; index++) {

            let inputClientReseau = [allReseau[index] ? allReseau[index] : ''  +' : '+ allTag[index] ? allTag[index] : '']
            clientReseauArray.push(inputClientReseau)

        }
            document.querySelector('#client_Reseaux').value = clientReseauArray.join(' ,')
            });
            })
        ;
    //2 recuperer tout les tag
                    
        document.querySelectorAll('.client__form--tag>input').forEach(tagInput => {
            tagInput.addEventListener('input', e => {
                allTag = []
                let tag 
                document.querySelectorAll('.client__form--tag>input').forEach(element => {
                    tag = element.value
                    allTag.push(tag)
                    console.log(allTag)
                            clientReseauArray = []
        for (let index = 0; index < allTag.length; index++) {

            let inputClientReseau = [allReseau[index] ? allReseau[index] : ''  +' : '+ allTag[index] ? allTag[index] : '']
            clientReseauArray.push(inputClientReseau)

        }
            });
            document.querySelector('#client_Reseaux').value = clientReseauArray.join(' ,')
        }
            )});
 
    </script>
{% endblock %}