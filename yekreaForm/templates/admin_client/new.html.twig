{% extends 'base.html.twig' %}

{% block title %}{{parent()}} Nouveau Client{% endblock %}

    
{% block body %}
    
    <div class="containerPages">

        <div class="pages">
        
            <h1 class="title">Nouveau client</h1>

            {# 
                CLASS BOOTSTRAP 

                progress-bar-striped  = trait sur la barre de progression
                progress-bar-animated = animation de la barre de progression

            #}

            {# Barre de progression 2eme étape #}

            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width:33%; background-color:#E5191E !important;" aria-valuenow="33" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        
            <div class="containerForm">
                
                <div class="formulaire">
                    {# <a class="btn btn-primary" href="{{ path('app_admin_client_index') }}">Retour</a> #}

                    {{ include('admin_client/_form.html.twig') }}
                </div>
                

            </div>
        </div>
    </div>
    

    
{% endblock %}
{% block javascripts %}
    <script>

        let checkbox = document.querySelectorAll('.box');
        let arrayBox = [];
        let textReseau = []

// pour chaque checkbox
        checkbox.forEach(element => {
            
            //si la checkbox est coché ou decoché
            element.addEventListener('change',()=>{
                // pour chaque checkbox :
                checkbox.forEach(box => {
                    
                    let inputText = box.nextElementSibling
                    // si le la checkbox est coché ,
                    if(box.checked)
                    {
                        inputText.removeAttribute('disabled')
                        inputText.removeAttribute('style')
                        
                        // je mets un evenement sur l'element suivent (input:text)
                        inputText.addEventListener('input',()=>{
                            textReseau = []
                            // pour chaque checkbox,
                            checkbox.forEach(element => {
                                arrayBox = []
                                //si la box est check
                                if(element.checked){
                                    //je recupere l'id de la checkbox
                                    let id = element.getAttribute('id')
                                    //je recupere la valeur de l'input:text
                                    let values = element.nextElementSibling.value
                                    // Condition sur la valeur de l'input pour recuperer, au cas ou, un input vide
                                    if(values){
                                
                                        arrayBox = [id +':'+ values]
                                        textReseau.push(arrayBox)
                                        console.log(textReseau)
                                    // }else{
                                    //     arrayBox = [id]
                                    //     textReseau.push(arrayBox)
                                    //     console.log(textReseau)
                                    }

                                }
                                // remplissage de l'input qui sera envoyer en bdd par l'ensemble des valeur des input donc la checkbox est coché
                                document.querySelector('#client_Reseaux').value = textReseau.join(' ,')
                            });
                        })
                    }
                })
                        console.log(textReseau.join(' ,'))
            });
        })
        
        



    </script>
{% endblock %}

