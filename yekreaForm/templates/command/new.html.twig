{% extends 'base.html.twig' %}

{% block title %}Nouvelle commande{% endblock %}

{% block body %}
    
    <div class="containerPages">
        <div class="pages">
            <h1 class="title">Ajouter une nouvelle commande</h1>

            {# Barre de progression dernière étape #}
            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 66%; background-color:#E5191E !important;" aria-valuenow="66" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            <div class="containerForm">
                <div class="formulaire">
                    
                    {# <a class="btn btn-primary" href="{{ path('app_command_index') }}">Retour</a> #}
                    {{ include('command/_form.html.twig') }}
                </div>
            </div>
        </div>
    </div>

    
{% endblock %}
{% block javascripts %}
    <script>
    let clientForm = document.querySelector('#command_client')
    let searchClient = document.querySelector('#command_searchClient')
    let options = document.querySelectorAll('#command_client>option')
    let allClient
    let optionArray = []
    let resultArray= []


        async function fetchCommandClient(){
            const response = await fetch("http://localhost:8000/command/api/fetch/client",{method: 'GET'})
            if (!response.ok)
            //en cas d'erreur prendant la requette Ajax
            {
                const message = `Il y a eu une erreur: ${response.status}`;
                console.log(message);
            }
            else
            {
                allClient =  await response.json();
                options.forEach(option => {
                    console.log(option)
                    option.remove()
                })
                allClient.forEach(option => {
                    optionArray = []
                    // indexOf() retourne l'index dans une chaine de caractere de l'element donné en argument. 
                    // Si l'element est absent de la chaine de caractère, indexOf() retourne -1
                    if (option['societe'].toLowerCase().indexOf(searchValue.toLowerCase()) != -1){
                        // console.log('true')
                        let optionValue = option['id']
                        let optionHTML = option['societe']
                        optionArray = [optionValue, optionHTML]
                        resultArray.push(optionArray)
                        
                    }
                });
            };
            if (resultArray.length > 0) {
                resultArray.forEach(element => {
                    let newOption = document.createElement('option')
                    newOption.setAttribute('value', element[0])
                    newOption.textContent = element[1]
                    clientForm.appendChild(newOption)
                });
            } else {
                let newOption = document.createElement('option')
                    newOption.textContent = 'Aucun resultat'
                    clientForm.appendChild(newOption)
            }
        }

        searchClient.addEventListener('input',(e)=>{
            searchValue = e.target.value;
            resultArray = []
            fetchCommandClient()
            options = document.querySelectorAll('#command_client>option')

        })
    
    </script>
{% endblock %}